{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","jsonPlaceholder","get","sent","type","payload","data","stop","this","_x3","apply","arguments","fetchUser","id","_ref3","_callee3","_context3","concat","_x4","UserHeader","user","props","react_default","createElement","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","components_UserHeader","renderList","_ref","_callee","getState","_context","_","chain","uniq","forEach","value","_x","_x2","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.08e44a1c.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com'\n});","import _ from 'lodash';\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\n\nexport const fetchPostsAndUsers = () =>  async (dispatch, getState) => {\n   await dispatch(fetchPosts());\n   \n//One approach\n//   const userIds = _.uniq(_.map(getState().posts, 'userId'));\n//   userIds.forEach(id => dispatch(fetchUser(id)));\n\n//Second approch with chain\n  _.chain(getState().posts)\n    .map('userId')\n    .uniq()\n    .forEach(id => dispatch(fetchUser(id)))\n    .value()\n};\n\nexport const fetchPosts = () =>  async dispatch => {\n        const response = await jsonPlaceholder.get('/posts');\n        \n        dispatch({ type: 'FETCH_POSTS', payload: response.data  })\n       \n    };\n\n    export const fetchUser = (id) =>  async dispatch => {\n        const response = await jsonPlaceholder.get(`/users/${id}`);\n        \n        dispatch({ type: 'FETCH_USER', payload: response.data  })\n       \n    };\n\n    // export const fetchUser = (id) => dispatch => _fetchUser(id, dispatch);         \n\n    // const _fetchUser = _.memoize(async(id, dispatch) => {\n    //    const response = await jsonPlaceholder.get(`/users/${id}`);\n           \n    //    dispatch({ type: 'FETCH_USER', payload: response.data  })\n   \n    // });\n   ","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass UserHeader extends React.Component {   \n    render(){\n        \n        const { user } = this.props;\n        if (!user) {\n            return null;\n        }\n        return (\n            <div className=\"header\">{user.name}</div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    //const user = this.props.users.find((user) => user.id === this.props.userId);\n    return { user: state.users.find(user => user.id === ownProps.userId) };\n}\n\nexport default connect(mapStateToProps)(UserHeader);;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPostsAndUsers } from '../actions';\nimport UserHeader from './UserHeader';\n\nclass PostList extends React.Component {\n    componentDidMount(){\n        this.props.fetchPostsAndUsers();\n    }\n\n    renderList(){\n        return this.props.posts.map(post => {\n            return (\n                <div className=\"item\" key={post.id}>\n                    <i className=\"large middle aligned icon user\" />\n                    <div className=\"content\">\n                        <div className=\"description\">\n                            <h2>{post.title}</h2>\n                            <p>{post.body}</p>\n                        </div>\n                        <UserHeader userId={post.userId}/>\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    render(){\n        \n        return(\n            <div className=\"ui relaxed divided list\">{this.renderList()}</div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return { posts: state.posts };\n}\n\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);","import React from 'react';\nimport PostList from './PostList';\nconst App = () => {\n    return (\n        <div className=\"ui container\">\n            <PostList />         \n        </div>\n    );\n};\n\nexport default App;","import { combineReducers } from 'redux';\nimport postReducer from './postsReducer';\nimport usersReducer from './usersReducer';\n\n// const songsReducer = () => {\n//     return [\n//         { title: 'Bailamose', duration: '2:45' },\n//         { title: 'Macrena', duration: '1:30' },\n//         { title: 'Rithme divine', duration: '3:45' },\n//         { title: 'Bilando', duration: '2:45' }\n//     ];\n// };\n\n// const selectedSongReducer = (selectedSong = null, action) => {\n//     if (action.type === 'SONG_SELECTED') {\n//         return action.payload;\n//     } \n\n//     return selectedSong;\n// };\n\nexport default combineReducers({\n    posts: postReducer,\n    users: usersReducer\n});","export default (state = [], action) => {\n     switch (action.type) {\n         case 'FETCH_POSTS':\n            return action.payload;\n         default:\n            return state;   \n     }\n};\n","export default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_USER':\n           return [...state, action.payload];\n        default:\n           return state;   \n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.querySelector('#root')\n);"],"sourceRoot":""}